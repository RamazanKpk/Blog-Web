@model Entity.Concrate.Article

@{
    ViewBag.Title = "Create Article";
}

<h2>Create Article</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ArticleTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ArticleTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArticleTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ArticleContent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ArticleContent, new { htmlAttributes = new { @class = "form-control" }, @id = "Ck-Editor" })
            @Html.ValidationMessageFor(model => model.ArticleContent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control" readonly value="@ViewBag.UserName" />
            @Html.HiddenFor(model => model.UserId, new { Value = ViewBag.UserName })

            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ArticleDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control" readonly value="@DateTime.Now.ToString("dd/MM/yyyy HH:m")" />
            @Html.HiddenFor(model => model.ArticleDate, new { Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm") })
            @Html.ValidationMessageFor(model => model.ArticleDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryId, "Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                var selectList = ViewBag.CategoryId as SelectList;
                if (selectList != null)
                {
                    @Html.DropDownList("CategoryId", selectList, "Select Category", htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    <p>No categories available</p>
                }
            }
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List Article", "Index", new { @class = "btn btn-link" })
</div>
<script src="~/Scripts/ckeditor/ckeditor.js" type="text/javascript"></script>
<script>
    CKEDITOR.replace('Ck-Editor');
</script>